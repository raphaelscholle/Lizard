From 6be881061ad42e14082f55d8da110242b4dbd834 Mon Sep 17 00:00:00 2001
From: anruliu@allwinnertech.com
Date: Tue, 12 May 2020 16:00:15 +0800
Subject: [PATCH] fix timer bug of (0x01<<slot) for 64bit

Signed-off-by: anruliu@allwinnertech.com
---
 src/kernel/message.c | 22 ++++++++++++++--------
 src/kernel/timer.c   | 11 +++++------
 2 files changed, 19 insertions(+), 14 deletions(-)

diff --git a/src/kernel/message.c b/src/kernel/message.c
index 377315e..6f9862a 100644
--- a/src/kernel/message.c
+++ b/src/kernel/message.c
@@ -493,6 +493,12 @@ BOOL PeekMessageEx (PMSG pMsg, HWND hWnd, UINT nMsgFilterMin, UINT nMsgFilterMax
 
     memset (pMsg, 0, sizeof(MSG));
 
+#ifdef _MGRM_PROCESSES
+    pMsg->time = SHAREDRES_TIMER_COUNTER;
+#else
+    pMsg->time = __mg_timer_counter;
+#endif
+
 checkagain:
 
     TEST_IF_QUIT(pMsgQueue, hWnd);
@@ -677,7 +683,8 @@ checkagain:
         /* get the first expired timer slot */
         slot = pMsgQueue->FirstTimerSlot;
         do {
-            if (pMsgQueue->TimerMask & (0x01 << slot))
+            DWORD dwTest = 0x01;
+            if (pMsgQueue->TimerMask & (dwTest << slot))
                 break;
 
             slot ++;
@@ -693,10 +700,8 @@ checkagain:
 
         if ((timer = __mg_get_timer (slot))) {
 
-            unsigned int tick_count = timer->tick_count;
-
-            timer->tick_count = 0;
-            pMsgQueue->TimerMask &= ~(0x01 << slot);
+            DWORD dwTest = 0x01;
+            pMsgQueue->TimerMask &= ~(dwTest << slot);
 
             if (timer->proc) {
                 BOOL ret_timer_proc;
@@ -706,7 +711,7 @@ checkagain:
 
                 /* calling the timer callback procedure */
                 ret_timer_proc = timer->proc (timer->hWnd, 
-                        timer->id, tick_count);
+                        timer->id, timer->tick_count);
 
                 /* lock the message queue again */
                 LOCK_MSGQ (pMsgQueue);
@@ -722,7 +727,7 @@ checkagain:
                 pMsg->message = MSG_TIMER;
                 pMsg->hwnd = timer->hWnd;
                 pMsg->wParam = timer->id;
-                pMsg->lParam = tick_count;
+                pMsg->lParam = timer->tick_count;
                 SET_PADD (NULL);
 
                 UNLOCK_MSGQ (pMsgQueue);
@@ -1228,7 +1233,8 @@ int GUIAPI ThrowAwayMessages (HWND hWnd)
 
     /* clear timer message flags of this window */
     for (slot = 0; slot < DEF_NR_TIMERS; slot++) {
-        if (pMsgQueue->TimerMask & (0x01 << slot)) {
+        DWORD dwTest = 0x01;
+        if (pMsgQueue->TimerMask & (dwTest << slot)) {
             HWND timer_wnd = __mg_get_timer_hwnd (slot);
             if (timer_wnd == hWnd 
                     || gui_GetMainWindowPtrOfControl (timer_wnd) == (PMAINWIN)hWnd){
diff --git a/src/kernel/timer.c b/src/kernel/timer.c
index 70c77fd..8a0e0e4 100644
--- a/src/kernel/timer.c
+++ b/src/kernel/timer.c
@@ -78,9 +78,9 @@ static pthread_mutex_t timerLock;
 #define TIMER_UNLOCK()
 #endif
 
-#ifdef _MGGAL_S3C6410
+#ifdef __LINUX__
 #   define _MG_USE_BETTER_TIMER
-#endif /* _MGGAL_S3C6410 */
+#endif /* __LINUX__ */
 
 #ifdef _MG_USE_BETTER_TIMER
 #include <sys/times.h>
@@ -298,11 +298,10 @@ void mg_dispatch_timer_message (DWORD inter)
         if (timerstr[i] && timerstr[i]->msg_queue) {
             timerstr[i]->count += inter;
             if (timerstr[i]->count >= timerstr[i]->speed) {
-                if (timerstr[i]->tick_count == 0)
 #ifdef _MGRM_PROCESSES
-                    timerstr[i]->tick_count = SHAREDRES_TIMER_COUNTER;
+                timerstr[i]->tick_count = SHAREDRES_TIMER_COUNTER;
 #else
-                    timerstr[i]->tick_count = __mg_timer_counter;
+                timerstr[i]->tick_count = __mg_timer_counter;
 #endif
                 /* setting timer flag is simple, we do not need to lock msgq,
                    or else we may encounter dead lock here */ 
@@ -469,7 +468,7 @@ void __mg_remove_timer (TIMER* timer, int slot)
     TIMER_LOCK ();
 
     if (timer && timer->msg_queue && timerstr[slot] == timer) {
-        /* The following code is already called in message.c...
+        /* The following code is already moved to message.c...
          * timer->msg_queue->TimerMask &= ~(0x01 << slot);
          */
         free (timerstr[slot]);
-- 
1.9.1

